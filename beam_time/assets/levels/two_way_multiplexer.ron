Level(
    id: "321e6dc9-4be6-4624-9f37-3b84f799f6a0",
    name: "Two Way Multiplexer",
    description: "Lets call the two left inputs A and B. The rightmost input will be E. When E is disabled pass the value at A to the output, when E is enabled pass the value at B to the output.",

    size: Some((6, 6)),
    permanent: [ (1, 5), (2, 5), (5, 5), (5, 0) ],
    labels: { },
    tiles: {
        (1, 5): Emitter(
            rotation: Down,
            active: true
        ),
        (2, 5): Emitter(
            rotation: Down,
            active: true
        ),
        (5, 5): Emitter(
            rotation: Down,
            active: true
        ),
        (5, 0): Detector
    },

    tests: Tests(
        lasers: [
            // Inptus
            Static((1, 5)),
            Static((2, 5)),

            // Selector
            Static((5, 5)),
        ],
        detectors: [ Static((5, 0)) ],

        cases: [
            TestCase(
                lasers: [ false, false, false ],
                detectors: [ [ false ] ],
            ),
            TestCase(
                lasers: [ false, false, true ],
                detectors: [ [ false ] ],
            ),
            TestCase(
                lasers: [ false, true, false ],
                detectors: [ [ false ] ],
            ),
            TestCase(
                lasers: [ false, true, true ],
                detectors: [ [ true ] ],
            ),
            TestCase(
                lasers: [ true, false, false ],
                detectors: [ [ true ] ],
            ),
            TestCase(
                lasers: [ true, false, true ],
                detectors: [ [ false ] ],
            ),
            TestCase(
                lasers: [ true, true, false ],
                detectors: [ [ true ] ],
            ),
            TestCase(
                lasers: [ true, true, true ],
                detectors: [ [ true ] ],
            ),
        ]
    )
)

// Cases generated with:
// for i in 0b000..=0b111_u32 {
//     let a = i & 0b100 != 0;
//     let b = i & 0b010 != 0;
//     let s = i & 0b001 != 0;
//     println!("{a}, {b}, {s}: {}", [a, b][s as u8 as usize]);
// }
