Level(
    id: "52108765-b8d2-47cf-a0c7-36b3b73cc644",
    name: "Double It",
    description: "Double the numeric value of the big-endian binary value.",
    parents: [ "ca887bfe-5c8c-425d-b414-265e6d8c909e" ], // ‚Üê full_adder

    size: (8, 5),
    permanent: [
        (0, 4), (1, 4), (2, 4), (3, 4), (4, 4), (5, 4), (6, 4), (7, 4),
        (0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)
    ],
    tiles: {
        (0, 4): Emitter( rotation: Down, active: true, id: 0 ),
        (1, 4): Emitter( rotation: Down, active: true, id: 1 ),
        (2, 4): Emitter( rotation: Down, active: true, id: 2 ),
        (3, 4): Emitter( rotation: Down, active: true, id: 3 ),
        (4, 4): Emitter( rotation: Down, active: true, id: 4 ),
        (5, 4): Emitter( rotation: Down, active: true, id: 5 ),
        (6, 4): Emitter( rotation: Down, active: true, id: 6 ),
        (7, 4): Emitter( rotation: Down, active: true, id: 7 ),

        (0, 0): Detector( id: 8 ),
        (1, 0): Detector( id: 9 ),
        (2, 0): Detector( id: 10 ),
        (3, 0): Detector( id: 11 ),
        (4, 0): Detector( id: 12 ),
        (5, 0): Detector( id: 13 ),
        (6, 0): Detector( id: 14 ),
        (7, 0): Detector( id: 15 )
    },

    tests: Tests(
        lasers: [ 0, 1, 2, 3, 4, 5, 6, 7 ],
        detectors: [ 8, 9, 10, 11, 12, 13, 14, 15 ],

        cases: [
            Cycle( lasers: [ false, false, false, false, false, false, false, false ], detectors: [ [ false, false, false, false, false, false, false, false ] ] ),
            Cycle( lasers: [ true,  true,  false, false, true,  true,  true,  false ], detectors: [ [ true,  false, false, true,  true,  true,  false, false ] ] ),
            Cycle( lasers: [ false, true,  false, false, true,  true,  false, true  ], detectors: [ [ true,  false, false, true,  true,  false, true,  false ] ] ),
            Cycle( lasers: [ true,  true,  false, false, false, false, true,  false ], detectors: [ [ true,  false, false, false, false, true,  false, false ] ] ),
            Cycle( lasers: [ true,  false, false, true,  false, false, false, false ], detectors: [ [ false, false, true,  false, false, false, false, false ] ] ),
            Cycle( lasers: [ true,  false, true,  true,  false, false, true,  true  ], detectors: [ [ false, true,  true,  false, false, true,  true,  false ] ] ),
            Cycle( lasers: [ false, true,  false, false, true,  true,  true,  true  ], detectors: [ [ true,  false, false, true,  true,  true,  true,  false ] ] ),
            Cycle( lasers: [ true,  false, true,  true,  true,  true,  true,  true  ], detectors: [ [ false, true,  true,  true,  true,  true,  true,  false ] ] ),
            Cycle( lasers: [ true,  true,  true,  false, true,  true,  true,  true  ], detectors: [ [ true,  true,  false, true,  true,  true,  true,  false ] ] ),
            Cycle( lasers: [ false, true,  true,  false, true,  false, true,  false ], detectors: [ [ true,  true,  false, true,  false, true,  false, false ] ] ),
            Cycle( lasers: [ true,  false, false, false, false, false, true,  true  ], detectors: [ [ false, false, false, false, false, true,  true,  false ] ] ),
            Cycle( lasers: [ false, true,  false, true,  false, false, true,  false ], detectors: [ [ true,  false, true,  false, false, true,  false, false ] ] ),
            Cycle( lasers: [ false, true,  false, true,  true,  true,  true,  true  ], detectors: [ [ true,  false, true,  true,  true,  true,  true,  false ] ] ),
            Cycle( lasers: [ true,  false, false, false, true,  true,  false, true  ], detectors: [ [ false, false, false, true,  true,  false, true,  false ] ] ),
            Cycle( lasers: [ true,  true,  false, true,  false, false, true,  true  ], detectors: [ [ true,  false, true,  false, false, true,  true,  false ] ] ),
            Cycle( lasers: [ false, false, true,  false, false, false, false, true  ], detectors: [ [ false, true,  false, false, false, false, true,  false ] ] ),
            Cycle( lasers: [ false, false, false, true,  false, true,  true,  true  ], detectors: [ [ false, false, true,  false, true,  true,  true,  false ] ] ),
            Cycle( lasers: [ true,  true,  true,  true,  true,  true,  true,  true  ], detectors: [ [ true,  true,  true,  true,  true,  true,  true,  false ] ] ),
        ]
    )
)

// Cases generated with the following code and find+replace:
//
// use rand::{RngCore, thread_rng};
//
// const MASK: u32 = 0b11111111;
//
// let mut rng = thread_rng();
// for i in 0..16 {
//     let input = rng.next_u32() & MASK;
//     let out = (input << 1) & MASK;
//     println!("{input:08b} : {out:08b}");
// }
